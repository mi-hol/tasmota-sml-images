# based on https://github.com/arendst/Tasmota/blob/development/.github/workflows/Tasmota_build_master.yml
name: Build_tasmota_ottelo
# This workflow builds Tasmota firmware for all platforms and languages in-scope for the Ottelo project.
on:
  workflow_dispatch:      # Start a workflow
  push:
    branches: main
  # always build
  #  paths-ignore:
  #  - '.github/**'        # Ignore changes towards the .github directory
  #  - '**.md'             # Do no build if *.md files changes

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

env:
  Tasmota_dir: '/Tasmota'

  
defaults:
  run:
    shell: bash
    working-directory: $Tasmota_dir

jobs:
  safeboot-images:
    runs-on: ubuntu-latest
    #if: github.repository == 'arendst/Tasmota'
    #if: github.repository == '**/tasmota-sml-images'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota32-safeboot
        #  - tasmota32solo1-safeboot
        #  - tasmota32c2-safeboot
          - tasmota32c3-safeboot
        #  - tasmota32c3ser-safeboot
        #  - tasmota32s2-safeboot
        #  - tasmota32s2cdc-safeboot
        #  - tasmota32s3-safeboot
        #  - tasmota32s3ser-safeboot
          - tasmota32c6-safeboot
        #  - tasmota32c6ser-safeboot
    steps:
      - run: mkdir $Tasmota_dir
      - name: Checkout Tasmota repo
        uses: actions/checkout@v4
        with:
            repository: 'arendst/Tasmota'
            ref: master
            path: $Tasmota_dir
      - run: |
          echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
          ls $Tasmota_dir/*
      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout Tasmota repo
        uses: actions/checkout@v4
        # Checkout multiple repos (nested)
        # with:
        #  ref: main
      - run: |
          echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout Tasmota_sml_image repo
        uses: actions/checkout@v4
        # Checkout multiple repos (nested)
        # with:
        #  ref: main
      - run: |
          echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
    
      - name: Copy ottelo project specific platformio settings to the correct location
        run: |
          ls ./Tasmota/tasmota/*
          cp ./user_config_override.h ./Tasmota/tasmota/user_config_override.h
          ls ./Tasmota/tasmota/user_config_override.h
          cp ./user_config_override.h ./Tasmota/tasmota/user_config_override.h
          ls ./Tasmota/tasmota/user_config_override.h
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Show Tasmota "release" version info
        run: |
          #cat ./Tasmota/tasmota/include/tasmota_version.h
          grep --word-regexp "TASMOTA_VERSION" ./Tasmota/tasmota/include/tasmota_version.h 
      - name: Run PlatformIO
        run: |
          platformio run -e ${{ matrix.variant }}
      - name: Upload safeboot firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base-images:
    runs-on: ubuntu-latest
    #if: github.repository == 'arendst/Tasmota'
    #if: github.repository == '*/tasmota-sml-images'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota
          - tasmota-4M
          - tasmota-minimal
        #  - tasmota-display
        #  - tasmota-ir
        #  - tasmota-knx
        #  - tasmota-lite
        #  - tasmota-sensors
        #  - tasmota-zbbridge
        #  - tasmota-zigbee
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base32-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    #if: github.repository == 'arendst/Tasmota'
    if: github.repository == '*/tasmota-sml-images'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota32
        #  - tasmota32-zbbrdgpro
        #  - tasmota32-webcam
        #  - tasmota32-bluetooth
        #  - tasmota32-nspanel
        #  - tasmota32-display
        #  - tasmota32-ir
        #  - tasmota32-lvgl
        #  - tasmota32c2
        #  - tasmota32c3
          - tasmota32c6
        #  - tasmota32s2
        #  - tasmota32s2cdc
        #  - tasmota32s3
        #  - tasmota32solo1
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: tasmota32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  language-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    #if: github.repository == 'arendst/Tasmota'
    if: github.repository == '*/tasmota-sml-images'
    continue-on-error: true
    strategy:
      matrix:
        variant: [ tasmota, tasmota32 ]
        # language: [ AD, AF, BG, BR, CN, CZ, DE, ES, FR, FY, GR, HE, HU, IT, KO, LT, NL, PL, PT, RO, RU, SE, SK, TR, TW, UK, VN ]
        language: [ AD, DE, UK]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: tasmota32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add "release" to footer
        run: |
          sed -i -e "s/TASMOTA_SHA_SHORT/TASMOTA_SHA_SHORT release-/g" ./tasmota/include/tasmota_version.h
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}-${{ matrix.language }}
      - name: Upload language firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}-${{ matrix.language }}
          path: ./build_output

  Release:
    needs: [base-images, base32-images, language-images]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - name: Download all Tasmota artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: tasmota*
        path: ./temp
    - name: Move files
      run: |
        mkdir -p ./release
        find ./temp -type f -exec cp -t ./release {} +
    - name: Display structure of downloaded files
      run: ls -R ./release/
    - name: Release
      uses: jason2866/action-gh-release@v1.2
      #if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.run_number }}
        files: |
          ./release/tasmota*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Start_final_copy:
    needs: Release
    runs-on: ubuntu-latest
    steps:
    - name: Dispatch workflow in arendst/Tasmota-firmware
      run: |
         curl -X POST https://api.github.com/repos/arendst/Tasmota-firmware/actions/workflows/fetch_deploy.yml/dispatches \
         -H 'Accept: application/vnd.github.everest-preview+json' \
         -u ${{ secrets.API_TOKEN_GITHUB }} \
         --data '{"ref": "gh_actions"}'